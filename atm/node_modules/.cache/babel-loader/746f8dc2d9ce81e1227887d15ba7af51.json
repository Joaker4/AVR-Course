{"ast":null,"code":"import _objectSpread from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Grid, Typography, withStyles, Paper, Button, TextField } from '@material-ui/core'; // import Screen from './Screen.jsx';\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    paper: {\n      width: '500px',\n      height: '500px',\n      backgroundColor: 'lightblue'\n    },\n    screen: {\n      width: '500px',\n      height: '500px'\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        console.log(name, event.target.value);\n\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.onSubmit = function (ev) {\n      ev.preventDefault();\n      console.log(ev.target.name);\n    };\n\n    _this.actions = {\n      pin: {\n        setPin: function setPin(oldPin, newPin) {\n          oldPin === _this.state.pin ? newPin !== _this.state.pin ? _this.setState({\n            pin: newPin\n          }) : _this.setState({\n            error: \"Pin can't be the same as before.\"\n          }) : _this.setState({\n            error: 'Pins do not match.'\n          });\n        },\n        checkPin: function checkPin(pin) {\n          pin === _this.state.pin ? _this.setState({\n            auth: true\n          }) : _this.setState({\n            error: 'Wrong Pin.'\n          });\n        }\n      },\n      checkBalance: function checkBalance() {\n        _this.setState({\n          currentScreen: 'balance',\n          screen: \"Your balance is: US$ \".concat(_this.state.balance)\n        });\n      },\n      withdraw: {\n        showWithdraw: function showWithdraw() {\n          _this.setState({\n            currentScreen: 'withdraw',\n            screen: \"Current Balance: US$ \".concat(_this.state.balance)\n          });\n        },\n        withdrawAmount: function withdrawAmount(amount) {\n          amount <= _this.state.balance ? _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              balance: prevState.balance - amount\n            });\n          }) : _this.setState({\n            error: 'Invalid Amount to Withdraw'\n          });\n        }\n      }\n    };\n    _this.state = {\n      balance: 1000,\n      pin: '1234',\n      auth: false,\n      pinTries: 0,\n      currentScreen: 'start',\n      screen: 'Welcome to Alistair Bank',\n      selectedBalance: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Automatic Teller Machine\")), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 10,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.checkBalance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Check Balance\")), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.currentScreen === 'start' ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.screen)) : null, this.state.currentScreen === 'balance' ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.screen)) : null, this.state.currentScreen === 'withdraw' ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.screen), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"selectedWithdraw\",\n        label: \"Enter Amount\",\n        variant: \"outlined\",\n        onChange: this.handleChange('selectedWithdraw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        type: \"submit\",\n        onClick: function onClick() {\n          return _this2.actions.withdraw.withdrawAmount(_this2.state.selectedWithdraw);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Withdraw\")))) : null), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.withdraw.showWithdraw();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Withdraw\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx"],"names":["React","Component","Grid","Typography","withStyles","Paper","Button","TextField","styles","theme","root","paper","width","height","backgroundColor","screen","App","props","handleChange","name","event","console","log","target","value","setState","onSubmit","ev","preventDefault","actions","pin","setPin","oldPin","newPin","state","error","checkPin","auth","checkBalance","currentScreen","balance","withdraw","showWithdraw","withdrawAmount","amount","prevState","pinTries","selectedBalance","classes","selectedWithdraw"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Grid, Typography, withStyles, Paper, Button, TextField } from '@material-ui/core'\n\n// import Screen from './Screen.jsx';\n\n\nconst styles = theme => ({\n    root: {\n\n    },\n    paper: {\n        width: '500px',\n        height: '500px',\n        backgroundColor: 'lightblue'\n    },\n    screen: {\n        width: '500px',\n        height: '500px'\n    }\n})\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: 1000,\n            pin: '1234',\n            auth: false,\n            pinTries: 0,\n            currentScreen: 'start',\n            screen: 'Welcome to Alistair Bank',\n            selectedBalance: '',\n            error: ''\n        }\n    }\n\n    componentDidUpdate() {\n        console.log(this.state)\n    }\n\n    handleChange = name => event => {\n        console.log(name, event.target.value)\n        this.setState(({\n            [name]: event.target.value,\n        }));\n    };\n\n    onSubmit = ev => {\n        ev.preventDefault()\n        console.log(ev.target.name)\n    }\n\n    actions = {\n        pin: {\n            setPin: (oldPin, newPin) => {\n                oldPin === this.state.pin ? (newPin !== this.state.pin ? (this.setState({ pin: newPin })) : this.setState({ error: \"Pin can't be the same as before.\" })) : this.setState({ error: 'Pins do not match.' })\n            },\n            checkPin: (pin) => {\n                pin === this.state.pin ? this.setState({ auth: true }) : this.setState({ error: 'Wrong Pin.' })\n            }\n        },\n        checkBalance: () => {\n            this.setState({ currentScreen: 'balance', screen: `Your balance is: US$ ${this.state.balance}` })\n        },\n        withdraw: {\n            showWithdraw: () => {\n                this.setState({ currentScreen: 'withdraw', screen: `Current Balance: US$ ${this.state.balance}` })\n            },\n            withdrawAmount: (amount) => {\n                amount <= this.state.balance ? this.setState(prevState => ({ ...prevState, balance: prevState.balance - amount })) : this.setState({ error: 'Invalid Amount to Withdraw' })\n            }\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid container item xs={12} justify='center' alignItems='center' >\n                <Grid item xs={12}>\n                    <Typography variant='title' align='center'>\n                        Automatic Teller Machine\n                    </Typography>\n                </Grid>\n                <Grid container item xs={10} justify='center'>\n                    <Grid container item xs justify='center' alignItems='center'>\n                        <Grid>\n                            <Button variant='raised' onClick={() => this.actions.checkBalance()}>\n                                Check Balance\n                            </Button>\n                        </Grid>\n                        <Paper className={classes.paper}>\n                            {this.state.currentScreen === 'start' ?\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                    <Typography variant='title' align='center'>\n                                        {this.state.screen}\n                                    </Typography>\n                                </Grid> : null}\n                            {this.state.currentScreen === 'balance' ?\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                    <Typography variant='title' align='center'>\n                                        {this.state.screen}\n                                    </Typography>\n                                </Grid> : null}\n                            {this.state.currentScreen === 'withdraw' ?\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                    <Typography variant='title' align='center'>\n                                        {this.state.screen}\n                                    </Typography>\n                                    <Grid container item xs={12} justify='center'>\n                                        <Grid container item xs={6} justify='center'>\n                                            <TextField name='selectedWithdraw' label='Enter Amount' variant='outlined' onChange={this.handleChange('selectedWithdraw')} />\n                                        </Grid>\n                                        <Grid container item xs={6} justify='center'>\n                                            <Button variant='raised' type='submit'\n                                            onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n                                            >\n                                                Withdraw\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                : null}\n                        </Paper>\n                        <Grid>\n                            <Button variant='raised' onClick={() => this.actions.withdraw.showWithdraw()}>\n                                Withdraw\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid >\n        )\n    }\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}