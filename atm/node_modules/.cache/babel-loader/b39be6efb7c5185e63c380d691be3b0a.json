{"ast":null,"code":"import _objectSpread from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Grid, Typography, withStyles, Paper, Button, TextField, List, ListItem, ListItemText } from '@material-ui/core';\nimport i18n from 'i18next';\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    paper: {\n      width: '500px',\n      height: '500px',\n      backgroundColor: 'lightblue'\n    },\n    screen: {\n      width: '500px',\n      height: '500px'\n    },\n    error: {\n      color: 'red'\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        console.log(name, event.target.value);\n\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.onSubmit = function (ev) {\n      ev.preventDefault();\n      var name = ev.target.name; // console.log(this.state[name])\n      // name === 'selectedWithdraw' && \n\n      switch (name) {\n        case 'selectedWithdraw':\n          if (_this.state.selectedWithdraw <= _this.state.balance) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                balance: prevState.balance - _this.state[name],\n                message2: \"\".concat(_this.props.t('message2').debited, \" \").concat(_this.state[name]),\n                selectedWithdraw: ''\n              });\n            });\n          } else {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                error: _this.props.t('errors').invalidWithdraw\n              });\n            });\n          }\n\n          break;\n\n        case 'selectedPin':\n          if (_this.state.selectedPin !== '') {\n            if (_this.state.selectedPin === _this.state.pin) {\n              _this.setState({\n                auth: true,\n                currentScreen: 'start',\n                screen: _this.props.t('screens').welcome,\n                selectedPin: '',\n                error: '',\n                pinTries: 0\n              });\n            } else if (_this.state.selectedPin !== _this.state.pin) {\n              _this.setState(function (prevState) {\n                return _objectSpread({}, prevState, {\n                  selectedPin: '',\n                  pinTries: prevState.pinTries + 1,\n                  error: 'Wrong Pin.'\n                });\n              });\n            }\n          }\n\n          break;\n\n        case 'changePin':\n          if (_this.state.selectedCurrentPin === _this.state.pin && _this.state.selectedNewPin !== _this.state.pin) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                pin: _this.state.selectedNewPin,\n                message2: 'Pin changed correctly'\n              });\n            });\n          } else if (_this.state.selectedCurrentPin === '' || _this.state.selectedNewPin === '') {\n            _this.setState({\n              message2: \"Pins can't be empty\"\n            });\n          } else if (_this.state.selectedCurrentPin !== _this.state.pin) {\n            _this.setState({\n              message2: 'Current Pin does not match'\n            });\n          } else if (_this.state.selectedNewPin === _this.state.pin) {\n            _this.setState({\n              message2: \"New Pin can't be same as old Pin\"\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.actions = {\n      pin: {\n        // setPin: (oldPin, newPin) => {\n        //     oldPin === this.state.pin ? (newPin !== this.state.pin ? (this.setState({ pin: newPin })) : this.setState({ error: \"Pin can't be the same as before.\" })) : this.setState({ error: 'Pins do not match.' })\n        // },\n        // checkPin: (pin) => {\n        //     pin === this.state.pin ? this.setState({ auth: true }) : this.setState({ error: 'Wrong Pin.' })\n        // }\n        showChangePin: function showChangePin() {\n          return _this.setState({\n            currentScreen: 'changePin'\n          });\n        }\n      },\n      checkBalance: function checkBalance() {\n        _this.setState({\n          currentScreen: 'balance',\n          screen: \"\".concat(_this.props.t('screens').checkBalance, \" \\xA3 \").concat(_this.state.balance)\n        });\n      },\n      withdraw: {\n        showWithdraw: function showWithdraw() {\n          _this.setState({\n            currentScreen: 'withdraw',\n            screen: \"\".concat(_this.props.t('screens').currentBalance, \" \").concat(_this.state.balance),\n            message2: ''\n          });\n        } // withdrawAmount: (amount) => {\n        //     amount <= this.state.balance ? this.setState(prevState => ({ ...prevState, balance: prevState.balance - amount })) : this.setState({ error: '' })\n        // }\n\n      },\n      language: {\n        changeLanguage: function changeLanguage(language) {\n          _this.setState({\n            language: language\n          });\n        },\n        showChangeLanguage: function showChangeLanguage() {\n          _this.setState({\n            currentScreen: 'changeLanguage',\n            message2: _this.props.t('message2').chooseLanguage\n          });\n        }\n      },\n      logout: function logout() {\n        _this.setState({\n          auth: false\n        });\n      }\n    };\n    _this.state = {\n      balance: 1000,\n      pin: '1234',\n      auth: false,\n      pinTries: 0,\n      blocked: false,\n      currentScreen: 'start',\n      screen: '',\n      // selectedBalance: '',\n      selectedWithdraw: '',\n      selectedPin: '',\n      selectedCurrentPin: '',\n      selectedNewPin: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // console.log(prevState.auth !== this.state.auth)\n      // console.log(this.state.language)\n      if (prevState.auth !== this.state.auth && !this.state.auth) {\n        this.setState({\n          screen: this.props.t('screens').welcome\n        });\n      }\n\n      if (prevState.language !== this.state.language) {\n        i18n.changeLanguage(this.state.language);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.t('inputs').selectPin);\n      console.log(i18n.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t;\n      var language = this.state.language;\n      return React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, t('screens').atm)), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 10,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.auth ? React.createElement(React.Fragment, null, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 2,\n        direction: \"column\",\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.checkBalance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, t('buttons').checkBalance)), React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.language.showChangeLanguage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, t('buttons').changeLanguage)))) : null, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, !this.state.auth ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, this.state.screen), React.createElement(\"form\", {\n        name: 'selectedPin',\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, t('screens').pleaseInputPin)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subheading\",\n        align: \"center\",\n        className: classes.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.error)), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"selectedPin\",\n        label: t('inputs').selectPin,\n        value: this.state.selectedPin,\n        variant: \"outlined\",\n        onChange: this.handleChange('selectedPin'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        type: \"submit\" // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, t('buttons').enterPin)))))) : null, this.state.auth ? React.createElement(React.Fragment, null, this.state.currentScreen === 'start' ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.screen)) : null, this.state.currentScreen === 'balance' ? React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, this.state.screen)) : null, this.state.currentScreen === 'withdraw' ? React.createElement(\"form\", {\n        name: 'selectedWithdraw',\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Current Balance: \\xA3 \".concat(this.state.balance))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, this.state.error === '' ? React.createElement(Typography, {\n        variant: \"subheading\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, this.state.message2) : React.createElement(Typography, {\n        variant: \"subheading\",\n        align: \"center\",\n        className: classes.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.error)), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"selectedWithdraw\",\n        label: \"Enter Amount\",\n        value: this.state.selectedWithdraw,\n        variant: \"outlined\",\n        onChange: this.handleChange('selectedWithdraw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        type: \"submit\" // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Withdraw\"))))) : null, this.state.currentScreen === 'changeLanguage' ? React.createElement(\"form\", {\n        name: 'selectedWithdraw',\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.state.message2), React.createElement(List, {\n        component: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        selected: language === 'en',\n        onClick: function onClick() {\n          _this2.actions.language.changeLanguage('en');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"English\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        selected: language === 'es',\n        onClick: function onClick() {\n          _this2.actions.language.changeLanguage('es');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Espa\\xF1ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        selected: language === 'jp',\n        onClick: function onClick() {\n          _this2.actions.language.changeLanguage('jp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"\\u65E5\\u672C\\u8A9E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })))))) : null, this.state.currentScreen === 'changePin' ? React.createElement(\"form\", {\n        name: 'changePin',\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subheading\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.state.message2)), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"selectedCurrentPin\",\n        label: t('inputs').selectedCurrentPin,\n        value: this.state.selectedCurrentPin,\n        variant: \"outlined\",\n        onChange: this.handleChange('selectedCurrentPin'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"selectedNewPin\",\n        label: t('inputs').selectedNewPin,\n        value: this.state.selectedNewPin,\n        variant: \"outlined\",\n        onChange: this.handleChange('selectedNewPin'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        type: \"submit\" // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, t('buttons').changePin))))) : null) : null), this.state.auth ? React.createElement(React.Fragment, null, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 2,\n        direction: \"column\",\n        justify: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.withdraw.showWithdraw();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, t('buttons').withdrawCash)), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.pin.showChangePin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, t('buttons').changePin)), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        onClick: function onClick() {\n          return _this2.actions.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, t('buttons').logout)))) : null)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx"],"names":["React","Component","Grid","Typography","withStyles","Paper","Button","TextField","List","ListItem","ListItemText","i18n","styles","theme","root","paper","width","height","backgroundColor","screen","error","color","App","props","handleChange","name","event","console","log","target","value","setState","onSubmit","ev","preventDefault","state","selectedWithdraw","balance","prevState","message2","t","debited","invalidWithdraw","selectedPin","pin","auth","currentScreen","welcome","pinTries","selectedCurrentPin","selectedNewPin","actions","showChangePin","checkBalance","withdraw","showWithdraw","currentBalance","language","changeLanguage","showChangeLanguage","chooseLanguage","logout","blocked","prevProps","forceUpdate","selectPin","classes","atm","pleaseInputPin","enterPin","changePin","withdrawCash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Grid, Typography, withStyles, Paper, Button, TextField, List, ListItem, ListItemText } from '@material-ui/core';\n\nimport i18n from 'i18next';\n\nconst styles = theme => ({\n    root: {\n\n    },\n    paper: {\n        width: '500px',\n        height: '500px',\n        backgroundColor: 'lightblue'\n    },\n    screen: {\n        width: '500px',\n        height: '500px'\n    },\n    error: {\n        color: 'red'\n    }\n})\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: 1000,\n            pin: '1234',\n            auth: false,\n            pinTries: 0,\n            blocked: false,\n            currentScreen: 'start',\n            screen: '',\n            // selectedBalance: '',\n            selectedWithdraw: '',\n            selectedPin: '',\n            selectedCurrentPin: '',\n            selectedNewPin: '',\n            error: ''\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(prevState.auth !== this.state.auth)\n        // console.log(this.state.language)\n        if (prevState.auth !== this.state.auth && !this.state.auth) {\n            this.setState({ screen: this.props.t('screens').welcome })\n        }\n        if (prevState.language !== this.state.language) {\n            i18n.changeLanguage(this.state.language)\n            this.forceUpdate()\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.t('inputs').selectPin)\n        console.log(i18n.language)\n    }\n\n    handleChange = name => event => {\n        console.log(name, event.target.value)\n        this.setState(({\n            [name]: event.target.value,\n        }));\n    };\n\n    onSubmit = ev => {\n        ev.preventDefault()\n        const name = ev.target.name\n        // console.log(this.state[name])\n        // name === 'selectedWithdraw' && \n        switch (name) {\n            case 'selectedWithdraw':\n                if (this.state.selectedWithdraw <= this.state.balance) {\n                    this.setState(prevState => ({ ...prevState, balance: prevState.balance - this.state[name], message2: `${this.props.t('message2').debited} ${this.state[name]}`, selectedWithdraw: '' }))\n                } else {\n                    this.setState(prevState => ({ ...prevState, error: this.props.t('errors').invalidWithdraw }))\n                }\n                break;\n\n            case 'selectedPin':\n                if (this.state.selectedPin !== '') {\n                    if (this.state.selectedPin === this.state.pin) {\n                        this.setState({ auth: true, currentScreen: 'start', screen: this.props.t('screens').welcome, selectedPin: '', error: '', pinTries: 0 })\n                    } else if (this.state.selectedPin !== this.state.pin) {\n                        this.setState(prevState => ({ ...prevState, selectedPin: '', pinTries: prevState.pinTries + 1, error: 'Wrong Pin.' }))\n                    }\n                }\n                break;\n\n            case 'changePin':\n                if (this.state.selectedCurrentPin === this.state.pin && this.state.selectedNewPin !== this.state.pin) {\n                    this.setState(prevState => ({ ...prevState, pin: this.state.selectedNewPin, message2: 'Pin changed correctly' }))\n                } else if (this.state.selectedCurrentPin === '' || this.state.selectedNewPin === '') {\n                    this.setState({ message2: \"Pins can't be empty\" })\n                } else if (this.state.selectedCurrentPin !== this.state.pin) {\n                    this.setState({ message2: 'Current Pin does not match' })\n                } else if (this.state.selectedNewPin === this.state.pin) {\n                    this.setState({ message2: \"New Pin can't be same as old Pin\" })\n                }\n\n                break;\n\n\n\n            default:\n                break;\n        }\n    }\n\n    actions = {\n        pin: {\n            // setPin: (oldPin, newPin) => {\n            //     oldPin === this.state.pin ? (newPin !== this.state.pin ? (this.setState({ pin: newPin })) : this.setState({ error: \"Pin can't be the same as before.\" })) : this.setState({ error: 'Pins do not match.' })\n            // },\n            // checkPin: (pin) => {\n            //     pin === this.state.pin ? this.setState({ auth: true }) : this.setState({ error: 'Wrong Pin.' })\n            // }\n            showChangePin: () => this.setState({ currentScreen: 'changePin' })\n        },\n        checkBalance: () => {\n            this.setState({ currentScreen: 'balance', screen: `${this.props.t('screens').checkBalance} £ ${this.state.balance}` })\n        },\n        withdraw: {\n            showWithdraw: () => {\n                this.setState({ currentScreen: 'withdraw', screen: `${this.props.t('screens').currentBalance} ${this.state.balance}`, message2: '' })\n            },\n            // withdrawAmount: (amount) => {\n            //     amount <= this.state.balance ? this.setState(prevState => ({ ...prevState, balance: prevState.balance - amount })) : this.setState({ error: '' })\n            // }\n        },\n        language: {\n            changeLanguage: (language) => { this.setState({ language: language }) },\n            showChangeLanguage: () => { this.setState({ currentScreen: 'changeLanguage', message2: this.props.t('message2').chooseLanguage }) },\n        },\n\n        logout: () => { this.setState({ auth: false }) }\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { language } = this.state;\n        return (\n            <Grid container item xs={12} justify='center' alignItems='center' >\n                <Grid item xs={12}>\n                    <Typography variant='title' align='center'>\n                        {t('screens').atm}\n                    </Typography>\n                </Grid>\n                <Grid container item xs={10} justify='center'>\n                    <Grid container item xs justify='center' alignItems='center'>\n                        {this.state.auth ?\n                            <>\n                                <Grid container item xs={2} direction='column' justify='flex-end'>\n                                    <Grid container justify='flex-end'>\n                                        <Button variant='raised' onClick={() => this.actions.checkBalance()}>\n                                            {t('buttons').checkBalance}\n                                        </Button>\n                                    </Grid>\n                                    <Grid container justify='flex-end'>\n                                        <Button variant='raised' onClick={() => this.actions.language.showChangeLanguage()}>\n                                            {t('buttons').changeLanguage}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null}\n                        <Paper className={classes.paper}>\n\n                            {!this.state.auth ?\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                    <Typography variant='title' align='center'>\n                                        {this.state.screen}\n                                    </Typography>\n\n                                    <form name={'selectedPin'} onSubmit={this.onSubmit} >\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                            <Grid item xs={12}>\n                                                <Typography variant='title' align='center'>\n                                                    {t('screens').pleaseInputPin}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n\n                                                <Typography variant='subheading' align='center' className={classes.error}>\n                                                    {this.state.error}\n                                                </Typography>\n                                            </Grid>\n\n                                            <Grid container item xs={12} justify='center'>\n                                                <TextField name='selectedPin' label={t('inputs').selectPin} value={this.state.selectedPin} variant='outlined' onChange={this.handleChange('selectedPin')} />\n                                            </Grid>\n\n                                            <Grid container item xs={12} justify='center'>\n                                                <Grid container item xs={6} justify='center'>\n                                                    <Button variant='raised' type='submit'\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n                                                    >\n                                                        {t('buttons').enterPin}\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </Grid> : null}\n\n\n\n                            {this.state.auth ? <>\n                                {\n                                    this.state.currentScreen === 'start' ?\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                            <Typography variant='title' align='center'>\n                                                {this.state.screen}\n                                            </Typography>\n                                        </Grid> : null\n                                }\n                                {this.state.currentScreen === 'balance' ?\n                                    <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                        <Typography variant='title' align='center'>\n                                            {this.state.screen}\n                                        </Typography>\n                                    </Grid> : null}\n                                {this.state.currentScreen === 'withdraw' ?\n                                    <form name={'selectedWithdraw'} onSubmit={this.onSubmit} >\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                            <Grid item xs={12}>\n                                                <Typography variant='title' align='center'>\n                                                    {`Current Balance: £ ${this.state.balance}`}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                {this.state.error === '' ?\n                                                    <Typography variant='subheading' align='center'>\n                                                        {this.state.message2}\n                                                    </Typography>\n                                                    :\n                                                    <Typography variant='subheading' align='center' className={classes.error}>\n                                                        {this.state.error}\n                                                    </Typography>\n                                                }\n                                            </Grid>\n\n                                            <Grid container item xs={12} justify='center'>\n                                                <Grid container item xs={6} justify='center'>\n                                                    <TextField name='selectedWithdraw' label='Enter Amount' value={this.state.selectedWithdraw} variant='outlined' onChange={this.handleChange('selectedWithdraw')} />\n                                                </Grid>\n                                                <Grid container item xs={6} justify='center'>\n                                                    <Button variant='raised' type='submit'\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n                                                    >\n                                                        Withdraw\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                    : null}\n\n                                {this.state.currentScreen === 'changeLanguage' ?\n                                    <form name={'selectedWithdraw'} onSubmit={this.onSubmit} >\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                            <Grid item xs={6}>\n\n                                                <Typography variant='title' align='center'>\n                                                    {this.state.message2}\n                                                </Typography>\n\n                                                <List component=\"nav\">\n                                                    <ListItem button selected={language === 'en'} onClick={() => { this.actions.language.changeLanguage('en') }}>\n                                                        <ListItemText primary=\"English\" />\n                                                    </ListItem>\n                                                    <ListItem button selected={language === 'es'} onClick={() => { this.actions.language.changeLanguage('es') }}>\n                                                        <ListItemText primary=\"Español\" />\n                                                    </ListItem>\n                                                    <ListItem button selected={language === 'jp'} onClick={() => { this.actions.language.changeLanguage('jp') }}>\n                                                        <ListItemText primary=\"日本語\" />\n                                                    </ListItem>\n                                                </List>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                    : null}\n\n\n                                {this.state.currentScreen === 'changePin' ?\n                                    <form name={'changePin'} onSubmit={this.onSubmit} >\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\n                                            <Grid item xs={12}>\n                                                <Typography variant='subheading' align='center'>\n                                                    {this.state.message2}\n                                                </Typography>\n                                            </Grid>\n\n                                            <Grid container item xs={12} justify='center'>\n                                                <Grid container item xs={6} justify='center'>\n                                                    <TextField name='selectedCurrentPin' label={t('inputs').selectedCurrentPin} value={this.state.selectedCurrentPin} variant='outlined' onChange={this.handleChange('selectedCurrentPin')} />\n                                                </Grid>\n                                                <Grid container item xs={6} justify='center'>\n                                                    <TextField name='selectedNewPin' label={t('inputs').selectedNewPin} value={this.state.selectedNewPin} variant='outlined' onChange={this.handleChange('selectedNewPin')} />\n                                                </Grid>\n                                                <Grid container item xs={12} justify='center'>\n                                                    <Button variant='raised' type='submit'\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\n                                                    >\n                                                        {t('buttons').changePin}\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                    : null}\n                            </>\n                                : null}\n                        </Paper>\n                        {this.state.auth ?\n                            <>\n                                <Grid container item xs={2} direction='column' justify='flex-start'>\n                                    <Grid>\n                                        <Button variant='raised' onClick={() => this.actions.withdraw.showWithdraw()}>\n                                            {t('buttons').withdrawCash}\n                                        </Button>\n\n                                    </Grid>\n                                    <Grid>\n                                        <Button variant='raised' onClick={() => this.actions.pin.showChangePin()}>\n                                            {t('buttons').changePin}\n                                        </Button>\n\n                                    </Grid>\n                                    <Grid>\n                                        <Button variant='raised' onClick={() => this.actions.logout()}>\n                                            {t('buttons').logout}\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null}\n\n                    </Grid>\n                </Grid>\n            </Grid >\n        )\n    }\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}