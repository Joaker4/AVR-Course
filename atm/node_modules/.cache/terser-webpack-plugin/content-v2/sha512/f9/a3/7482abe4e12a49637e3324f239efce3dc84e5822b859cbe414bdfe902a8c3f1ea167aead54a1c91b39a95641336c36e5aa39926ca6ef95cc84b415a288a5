{"map":"{\"version\":3,\"sources\":[\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/serviceWorker.js\",\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx\",\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/i18n.jsx\",\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"name\",\"event\",\"console\",\"log\",\"target\",\"value\",\"setState\",\"defineProperty\",\"onSubmit\",\"ev\",\"preventDefault\",\"state\",\"selectedWithdraw\",\"balance\",\"prevState\",\"objectSpread\",\"message2\",\"concat\",\"t\",\"debited\",\"error\",\"invalidWithdraw\",\"selectedPin\",\"pin\",\"auth\",\"currentScreen\",\"screen\",\"welcome\",\"pinTries\",\"blocked\",\"selectedLoginNoCard\",\"loginNoCard\",\"actions\",\"withdraw\",\"showWithdraw\",\"selectedCurrentPin\",\"selectedNewPin\",\"emptyPin\",\"matchPin\",\"samePin\",\"showChangePin\",\"checkBalance\",\"currentBalance\",\"language\",\"changeLanguage\",\"showChangeLanguage\",\"chooseLanguage\",\"logout\",\"prevProps\",\"i18n\",\"forceUpdate\",\"selectPin\",\"_this2\",\"_this$props\",\"classes\",\"react_default\",\"a\",\"createElement\",\"index_es\",\"container\",\"item\",\"xs\",\"justify\",\"alignItems\",\"variant\",\"align\",\"atm\",\"Fragment\",\"direction\",\"onClick\",\"className\",\"paper\",\"label\",\"onChange\",\"type\",\"pleaseInputPin\",\"enterPin\",\"enterAmount\",\"component\",\"button\",\"selected\",\"primary\",\"changePin\",\"withdrawCash\",\"Component\",\"withStyles\",\"theme\",\"root\",\"width\",\"height\",\"backgroundColor\",\"color\",\"use\",\"LanguageDetector\",\"reactI18nextModule\",\"init\",\"resources\",\"en\",\"translations\",\"Translations\",\"es\",\"jp\",\"fallbackLng\",\"debug\",\"returnObjects\",\"ns\",\"defaultNS\",\"keySeparator\",\"interpolation\",\"escapeValue\",\"formatSeparator\",\"react\",\"wait\",\"withI18n\",\"ReactDOM\",\"render\",\"src_i18n\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\n\\nimport { Grid, Typography, withStyles, Paper, Button, TextField, List, ListItem, ListItemText } from '@material-ui/core';\\n\\nimport i18n from 'i18next';\\n\\nconst styles = theme => ({\\n    root: {\\n\\n    },\\n    paper: {\\n        width: '500px',\\n        height: '500px',\\n        backgroundColor: 'lightblue'\\n    },\\n    screen: {\\n        width: '500px',\\n        height: '500px'\\n    },\\n    error: {\\n        color: 'red'\\n    }\\n})\\n\\nclass App extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            balance: 1000,\\n            pin: '1234',\\n            auth: false,\\n            pinTries: 0,\\n            blocked: false,\\n            currentScreen: 'start',\\n            screen: '',\\n            // selectedBalance: '',\\n            loginNoCard: 'alistair',\\n            selectedWithdraw: '',\\n            selectedPin: '',\\n            selectedCurrentPin: '',\\n            selectedNewPin: '',\\n            selectedLoginNoCard: '',\\n            error: ''\\n        }\\n    }\\n\\n    componentDidUpdate(prevProps, prevState) {\\n        // console.log(prevState.auth !== this.state.auth)\\n        // console.log(this.state.language)\\n        if (prevState.auth !== this.state.auth && !this.state.auth) {\\n            this.setState({ screen: this.props.t('screens').welcome })\\n        }\\n        if (prevState.language !== this.state.language) {\\n            i18n.changeLanguage(this.state.language)\\n            this.forceUpdate()\\n        }\\n    }\\n\\n    componentDidMount() {\\n        console.log(this.props.t('inputs').selectPin)\\n        console.log(i18n.language)\\n    }\\n\\n    handleChange = name => event => {\\n        console.log(name, event.target.value)\\n        this.setState(({\\n            [name]: event.target.value,\\n        }));\\n    };\\n\\n    onSubmit = ev => {\\n        ev.preventDefault()\\n        const name = ev.target.name\\n        // console.log(this.state[name])\\n        // name === 'selectedWithdraw' && \\n        switch (name) {\\n            case 'selectedWithdraw':\\n                if (this.state.selectedWithdraw <= this.state.balance) {\\n                    this.setState(prevState => ({ ...prevState, balance: prevState.balance - this.state[name], message2: `${this.props.t('message2').debited} ${this.state[name]}`, selectedWithdraw: '' }))\\n                } else {\\n                    this.setState(prevState => ({ ...prevState, error: this.props.t('errors').invalidWithdraw }))\\n                }\\n                break;\\n\\n            case 'selectedPin':\\n                if (this.state.selectedPin !== '') {\\n\\n                    if (this.state.selectedPin === this.state.pin) {\\n                        this.setState({ auth: true, currentScreen: 'start', screen: this.props.t('screens').welcome, selectedPin: '', error: '', pinTries: 0 })\\n                    } else if (this.state.selectedPin !== this.state.pin) {\\n                        this.setState(prevState => ({ ...prevState, selectedPin: '', pinTries: prevState.pinTries + 1, error: prevState.pinTries >= 2 ? 'Blocked input, please login without card using your first name' : 'Wrong Pin.', blocked: prevState.pinTries >= 2 }))\\n                    }\\n                }\\n                break;\\n\\n            case 'selectedLoginNoCard':\\n                if (this.state.selectedLoginNoCard !== '' && this.state.loginNoCard === this.state.selectedLoginNoCard) {\\n                    this.setState({ auth: true, blocked: false, selectedLoginNoCard: '', error: '', screen: this.props.t('screens').welcome, selectedPin: '', pinTries: 0 });\\n                    this.actions.withdraw.showWithdraw()\\n\\n                } else {\\n                    this.setState(prevState => ({ ...prevState, selectedLoginNoCard: '', error: prevState.pinTries >= 2 ? 'Blocked input, please login without card using your first name' : 'Wrong Pin.' }))\\n                }\\n                break;\\n\\n            case 'changePin':\\n                if (this.state.selectedCurrentPin === this.state.pin && this.state.selectedNewPin !== this.state.pin) {\\n                    this.setState(prevState => ({ ...prevState, pin: this.state.selectedNewPin, message2: 'Pin changed correctly', error: '' }))\\n                } else if (this.state.selectedCurrentPin === '' || this.state.selectedNewPin === '') {\\n                    this.setState({ error: this.props.t('errors').emptyPin, message2: '' })\\n                } else if (this.state.selectedCurrentPin !== this.state.pin) {\\n                    this.setState({ error: this.props.t('errors').matchPin, message2: '' })\\n                } else if (this.state.selectedNewPin === this.state.pin) {\\n                    this.setState({ error: this.props.t('errors').samePin, message2: '' })\\n                }\\n\\n                break;\\n\\n\\n\\n            default:\\n                break;\\n        }\\n    }\\n\\n    actions = {\\n        pin: {\\n            // setPin: (oldPin, newPin) => {\\n            //     oldPin === this.state.pin ? (newPin !== this.state.pin ? (this.setState({ pin: newPin })) : this.setState({ error: \\\"Pin can't be the same as before.\\\" })) : this.setState({ error: 'Pins do not match.' })\\n            // },\\n            // checkPin: (pin) => {\\n            //     pin === this.state.pin ? this.setState({ auth: true }) : this.setState({ error: 'Wrong Pin.' })\\n            // }\\n            showChangePin: () => this.setState({ currentScreen: 'changePin' })\\n        },\\n        checkBalance: () => {\\n            this.setState({ currentScreen: 'balance', screen: `${this.props.t('screens').checkBalance} £ ${this.state.balance}` })\\n        },\\n        withdraw: {\\n            showWithdraw: () => {\\n                this.setState({ currentScreen: 'withdraw', screen: `${this.props.t('screens').currentBalance} ${this.state.balance}`, message2: '' })\\n            },\\n            // withdrawAmount: (amount) => {\\n            //     amount <= this.state.balance ? this.setState(prevState => ({ ...prevState, balance: prevState.balance - amount })) : this.setState({ error: '' })\\n            // }\\n        },\\n        language: {\\n            changeLanguage: (language) => { this.setState({ language: language }) },\\n            showChangeLanguage: () => { this.setState({ currentScreen: 'changeLanguage', message2: this.props.t('message2').chooseLanguage }) },\\n        },\\n\\n        logout: () => { this.setState({ auth: false }) }\\n    }\\n\\n    render() {\\n        const { classes, t } = this.props;\\n        const { language } = this.state;\\n        return (\\n            <Grid container item xs={12} justify='center' alignItems='center' >\\n                <Grid item xs={12}>\\n                    <Typography variant='title' align='center'>\\n                        {t('screens').atm}\\n                    </Typography>\\n                </Grid>\\n                <Grid container item xs={10} justify='center'>\\n                    <Grid container item xs justify='center' alignItems='center'>\\n                        {this.state.auth ?\\n                            <>\\n                                <Grid container item xs={2} direction='column' justify='flex-end'>\\n                                    <Grid container justify='flex-end'>\\n                                        <Button variant='raised' onClick={() => this.actions.checkBalance()}>\\n                                            {t('buttons').checkBalance}\\n                                        </Button>\\n                                    </Grid>\\n                                    <Grid container justify='flex-end'>\\n                                        <Button variant='raised' onClick={() => this.actions.language.showChangeLanguage()}>\\n                                            {t('buttons').changeLanguage}\\n                                        </Button>\\n                                    </Grid>\\n                                </Grid>\\n                            </>\\n                            : null}\\n                        <Paper className={classes.paper}>\\n                            {this.state.blocked ?\\n\\n                                <form name={'selectedLoginNoCard'} onSubmit={this.onSubmit} >\\n                                    <Grid container alignItems='center' justify='center' className={classes.screen}>\\n\\n                                        <Grid item xs={12}>\\n                                            <Typography variant='subheading' align='center' className={classes.error}>\\n                                                {this.state.error}\\n                                            </Typography>\\n                                        </Grid>\\n                                        <Grid container item xs={12} justify='center'>\\n                                            <TextField name='selectedLoginNoCard' label={t('inputs').loginNoCard} value={this.state.selectedLoginNoCard} variant='outlined' onChange={this.handleChange('selectedLoginNoCard')} />\\n                                        </Grid>\\n\\n                                        <Grid container item xs={12} justify='center'>\\n                                            <Grid container item xs={6} justify='center'>\\n                                                <Button variant='raised' type='submit'\\n                                                // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\\n                                                >\\n                                                    {t('buttons').loginNoCard}\\n                                                </Button>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </Grid>\\n\\n                                </form>\\n                                : null}\\n                            {!this.state.auth && !this.state.blocked ?\\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                    <Typography variant='title' align='center'>\\n                                        {this.state.screen}\\n                                    </Typography>\\n\\n                                    <form name={'selectedPin'} onSubmit={this.onSubmit} >\\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                            <Grid item xs={12}>\\n                                                <Typography variant='title' align='center'>\\n                                                    {t('screens').pleaseInputPin}\\n                                                </Typography>\\n                                            </Grid>\\n                                            <Grid item xs={12}>\\n\\n                                                <Typography variant='subheading' align='center' className={classes.error}>\\n                                                    {this.state.error}\\n                                                </Typography>\\n                                            </Grid>\\n\\n                                            <Grid container item xs={12} justify='center'>\\n                                                <TextField name='selectedPin' label={t('inputs').selectPin} value={this.state.selectedPin} variant='outlined' onChange={this.handleChange('selectedPin')} />\\n                                            </Grid>\\n\\n                                            <Grid container item xs={12} justify='center'>\\n                                                <Grid container item xs={6} justify='center'>\\n                                                    <Button variant='raised' type='submit'\\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\\n                                                    >\\n                                                        {t('buttons').enterPin}\\n                                                    </Button>\\n                                                </Grid>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </form>\\n                                </Grid> : null}\\n\\n\\n\\n                            {this.state.auth ? <>\\n                                {\\n                                    this.state.currentScreen === 'start' ?\\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                            <Typography variant='title' align='center'>\\n                                                {this.state.screen}\\n                                            </Typography>\\n                                        </Grid> : null\\n                                }\\n                                {this.state.currentScreen === 'balance' ?\\n                                    <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                        <Typography variant='title' align='center'>\\n                                            {this.state.screen}\\n                                        </Typography>\\n                                    </Grid> : null}\\n                                {this.state.currentScreen === 'withdraw' ?\\n                                    <form name={'selectedWithdraw'} onSubmit={this.onSubmit} >\\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                            <Grid item xs={12}>\\n                                                <Typography variant='title' align='center'>\\n                                                    {`${t('screens').currentBalance} ${this.state.balance}`}\\n                                                </Typography>\\n                                            </Grid>\\n                                            <Grid item xs={12}>\\n                                                {this.state.error === '' ?\\n                                                    <Typography variant='subheading' align='center'>\\n                                                        {this.state.message2}\\n                                                    </Typography>\\n                                                    :\\n                                                    <Typography variant='subheading' align='center' className={classes.error}>\\n                                                        {this.state.error}\\n                                                    </Typography>\\n                                                }\\n                                            </Grid>\\n\\n                                            <Grid container item xs={12} justify='center'>\\n                                                <Grid container item xs={6} justify='center'>\\n                                                    <TextField name='selectedWithdraw' label={t('inputs').enterAmount} value={this.state.selectedWithdraw} variant='outlined' onChange={this.handleChange('selectedWithdraw')} />\\n                                                </Grid>\\n                                                <Grid container item xs={6} justify='center'>\\n                                                    <Button variant='raised' type='submit'\\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\\n                                                    >\\n                                                        {t('buttons').withdraw}\\n                                                    </Button>\\n                                                </Grid>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </form>\\n                                    : null}\\n\\n                                {this.state.currentScreen === 'changeLanguage' ?\\n                                    <form name={'selectedWithdraw'} onSubmit={this.onSubmit} >\\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                            <Grid item xs={6}>\\n\\n                                                <Typography variant='title' align='center'>\\n                                                    {this.state.message2}\\n                                                </Typography>\\n\\n                                                <List component=\\\"nav\\\">\\n                                                    <ListItem button selected={language === 'en'} onClick={() => { this.actions.language.changeLanguage('en') }}>\\n                                                        <ListItemText primary=\\\"English\\\" />\\n                                                    </ListItem>\\n                                                    <ListItem button selected={language === 'es'} onClick={() => { this.actions.language.changeLanguage('es') }}>\\n                                                        <ListItemText primary=\\\"Español\\\" />\\n                                                    </ListItem>\\n                                                    <ListItem button selected={language === 'jp'} onClick={() => { this.actions.language.changeLanguage('jp') }}>\\n                                                        <ListItemText primary=\\\"日本語\\\" />\\n                                                    </ListItem>\\n                                                </List>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </form>\\n                                    : null}\\n\\n\\n                                {this.state.currentScreen === 'changePin' ?\\n                                    <form name={'changePin'} onSubmit={this.onSubmit} >\\n                                        <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                            <Grid item xs={12}>\\n                                                {this.state.error === '' ?\\n                                                    <Typography variant='subheading' align='center'>\\n                                                        {this.state.message2}\\n                                                    </Typography>\\n                                                    :\\n                                                    <Typography variant='subheading' align='center' className={classes.error}>\\n                                                        {this.state.error}\\n                                                    </Typography>\\n                                                }\\n                                            </Grid>\\n\\n                                            <Grid container item xs={12} justify='center'>\\n                                                <Grid container item xs={6} justify='center'>\\n                                                    <TextField name='selectedCurrentPin' label={t('inputs').selectedCurrentPin} value={this.state.selectedCurrentPin} variant='outlined' onChange={this.handleChange('selectedCurrentPin')} />\\n                                                </Grid>\\n                                                <Grid container item xs={6} justify='center'>\\n                                                    <TextField name='selectedNewPin' label={t('inputs').selectedNewPin} value={this.state.selectedNewPin} variant='outlined' onChange={this.handleChange('selectedNewPin')} />\\n                                                </Grid>\\n                                                <Grid container item xs={12} justify='center'>\\n                                                    <Button variant='raised' type='submit'\\n                                                    // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\\n                                                    >\\n                                                        {t('buttons').changePin}\\n                                                    </Button>\\n                                                </Grid>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </form>\\n                                    : null}\\n                            </>\\n                                : null}\\n                        </Paper>\\n                        {this.state.auth ?\\n                            <>\\n                                <Grid container item xs={2} direction='column' justify='flex-start'>\\n                                    <Grid>\\n                                        <Button variant='raised' onClick={() => this.actions.withdraw.showWithdraw()}>\\n                                            {t('buttons').withdrawCash}\\n                                        </Button>\\n\\n                                    </Grid>\\n                                    <Grid>\\n                                        <Button variant='raised' onClick={() => this.actions.pin.showChangePin()}>\\n                                            {t('buttons').changePin}\\n                                        </Button>\\n\\n                                    </Grid>\\n                                    <Grid>\\n                                        <Button variant='raised' onClick={() => this.actions.logout()}>\\n                                            {t('buttons').logout}\\n                                        </Button>\\n\\n                                    </Grid>\\n                                </Grid>\\n                            </>\\n                            : null}\\n\\n                    </Grid>\\n                </Grid>\\n            </Grid >\\n        )\\n    }\\n}\\n\\nexport default withStyles(styles)(App);\",\"import i18n from 'i18next';\\nimport { withI18n, reactI18nextModule } from \\\"react-i18next\\\";\\nimport LanguageDetector from \\\"i18next-browser-languagedetector\\\";\\nimport App from './App';\\nimport Translations from './i18n.json'\\n\\ni18n.use(LanguageDetector).use(reactI18nextModule).init({\\n    // we init with resources\\n    resources: {\\n        en: {\\n            translations: Translations.en\\n        },\\n        es: {\\n            translations: Translations.es\\n        },\\n        jp: {\\n            translations: Translations.jp\\n        },\\n\\n    },\\n    fallbackLng: \\\"en\\\",\\n    debug: true,\\n    returnObjects: true,\\n\\n    // have a common namespace used around the full app\\n    ns: [\\\"translations\\\"],\\n    defaultNS: \\\"translations\\\",\\n\\n    keySeparator: false, // we use content as keys\\n\\n    interpolation: {\\n        escapeValue: false, // not needed for react!!\\n        formatSeparator: \\\",\\\"\\n    },\\n\\n    react: {\\n        wait: true\\n    }\\n});\\n\\nexport default withI18n()(App);\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\n// import App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\n// import { I18nextProvider } from 'react-i18next';\\n\\nimport I18n from \\\"./i18n.jsx\\\";\\n\\nReactDOM.render(\\n    // < I18nextProvider i18n={i18n}><App /></I18nextProvider>\\n    <I18n />\\n    , document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{205:function(e,t,n){e.exports=n(355)},210:function(e,t,n){},355:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),i=n(25),s=n.n(i);n(210),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var c=n(39),l=n(80),o=n(120),u=n.n(o),m=n(34),g=n(50),h=n(121),d=n(122),b=n(126),p=n(123),P=n(125),E=n(2),w=n(17),f=function(e){function t(e){var n;return Object(h.a)(this,t),(n=Object(b.a)(this,Object(p.a)(t).call(this,e))).handleChange=function(e){return function(t){console.log(e,t.target.value),n.setState(Object(g.a)({},e,t.target.value))}},n.onSubmit=function(e){e.preventDefault();var t=e.target.name;switch(t){case\"selectedWithdraw\":n.state.selectedWithdraw<=n.state.balance?n.setState(function(e){return Object(m.a)({},e,{balance:e.balance-n.state[t],message2:\"\".concat(n.props.t(\"message2\").debited,\" \").concat(n.state[t]),selectedWithdraw:\"\"})}):n.setState(function(e){return Object(m.a)({},e,{error:n.props.t(\"errors\").invalidWithdraw})});break;case\"selectedPin\":\"\"!==n.state.selectedPin&&(n.state.selectedPin===n.state.pin?n.setState({auth:!0,currentScreen:\"start\",screen:n.props.t(\"screens\").welcome,selectedPin:\"\",error:\"\",pinTries:0}):n.state.selectedPin!==n.state.pin&&n.setState(function(e){return Object(m.a)({},e,{selectedPin:\"\",pinTries:e.pinTries+1,error:e.pinTries>=2?\"Blocked input, please login without card using your first name\":\"Wrong Pin.\",blocked:e.pinTries>=2})}));break;case\"selectedLoginNoCard\":\"\"!==n.state.selectedLoginNoCard&&n.state.loginNoCard===n.state.selectedLoginNoCard?(n.setState({auth:!0,blocked:!1,selectedLoginNoCard:\"\",error:\"\",screen:n.props.t(\"screens\").welcome,selectedPin:\"\",pinTries:0}),n.actions.withdraw.showWithdraw()):n.setState(function(e){return Object(m.a)({},e,{selectedLoginNoCard:\"\",error:e.pinTries>=2?\"Blocked input, please login without card using your first name\":\"Wrong Pin.\"})});break;case\"changePin\":n.state.selectedCurrentPin===n.state.pin&&n.state.selectedNewPin!==n.state.pin?n.setState(function(e){return Object(m.a)({},e,{pin:n.state.selectedNewPin,message2:\"Pin changed correctly\",error:\"\"})}):\"\"===n.state.selectedCurrentPin||\"\"===n.state.selectedNewPin?n.setState({error:n.props.t(\"errors\").emptyPin,message2:\"\"}):n.state.selectedCurrentPin!==n.state.pin?n.setState({error:n.props.t(\"errors\").matchPin,message2:\"\"}):n.state.selectedNewPin===n.state.pin&&n.setState({error:n.props.t(\"errors\").samePin,message2:\"\"})}},n.actions={pin:{showChangePin:function(){return n.setState({currentScreen:\"changePin\"})}},checkBalance:function(){n.setState({currentScreen:\"balance\",screen:\"\".concat(n.props.t(\"screens\").checkBalance,\" \\xa3 \").concat(n.state.balance)})},withdraw:{showWithdraw:function(){n.setState({currentScreen:\"withdraw\",screen:\"\".concat(n.props.t(\"screens\").currentBalance,\" \").concat(n.state.balance),message2:\"\"})}},language:{changeLanguage:function(e){n.setState({language:e})},showChangeLanguage:function(){n.setState({currentScreen:\"changeLanguage\",message2:n.props.t(\"message2\").chooseLanguage})}},logout:function(){n.setState({auth:!1})}},n.state={balance:1e3,pin:\"1234\",auth:!1,pinTries:0,blocked:!1,currentScreen:\"start\",screen:\"\",loginNoCard:\"alistair\",selectedWithdraw:\"\",selectedPin:\"\",selectedCurrentPin:\"\",selectedNewPin:\"\",selectedLoginNoCard:\"\",error:\"\"},n}return Object(P.a)(t,e),Object(d.a)(t,[{key:\"componentDidUpdate\",value:function(e,t){t.auth===this.state.auth||this.state.auth||this.setState({screen:this.props.t(\"screens\").welcome}),t.language!==this.state.language&&(c.a.changeLanguage(this.state.language),this.forceUpdate())}},{key:\"componentDidMount\",value:function(){console.log(this.props.t(\"inputs\").selectPin),console.log(c.a.language)}},{key:\"render\",value:function(){var e=this,t=this.props,n=t.classes,a=t.t,i=this.state.language;return r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\",alignItems:\"center\"},r.a.createElement(E.b,{item:!0,xs:12},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},a(\"screens\").atm)),r.a.createElement(E.b,{container:!0,item:!0,xs:10,justify:\"center\"},r.a.createElement(E.b,{container:!0,item:!0,xs:!0,justify:\"center\",alignItems:\"center\"},this.state.auth?r.a.createElement(r.a.Fragment,null,r.a.createElement(E.b,{container:!0,item:!0,xs:2,direction:\"column\",justify:\"flex-end\"},r.a.createElement(E.b,{container:!0,justify:\"flex-end\"},r.a.createElement(E.a,{variant:\"raised\",onClick:function(){return e.actions.checkBalance()}},a(\"buttons\").checkBalance)),r.a.createElement(E.b,{container:!0,justify:\"flex-end\"},r.a.createElement(E.a,{variant:\"raised\",onClick:function(){return e.actions.language.showChangeLanguage()}},a(\"buttons\").changeLanguage)))):null,r.a.createElement(E.f,{className:n.paper},this.state.blocked?r.a.createElement(\"form\",{name:\"selectedLoginNoCard\",onSubmit:this.onSubmit},r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.b,{item:!0,xs:12},r.a.createElement(E.h,{variant:\"subheading\",align:\"center\",className:n.error},this.state.error)),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.g,{name:\"selectedLoginNoCard\",label:a(\"inputs\").loginNoCard,value:this.state.selectedLoginNoCard,variant:\"outlined\",onChange:this.handleChange(\"selectedLoginNoCard\")})),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.a,{variant:\"raised\",type:\"submit\"},a(\"buttons\").loginNoCard))))):null,this.state.auth||this.state.blocked?null:r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},this.state.screen),r.a.createElement(\"form\",{name:\"selectedPin\",onSubmit:this.onSubmit},r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.b,{item:!0,xs:12},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},a(\"screens\").pleaseInputPin)),r.a.createElement(E.b,{item:!0,xs:12},r.a.createElement(E.h,{variant:\"subheading\",align:\"center\",className:n.error},this.state.error)),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.g,{name:\"selectedPin\",label:a(\"inputs\").selectPin,value:this.state.selectedPin,variant:\"outlined\",onChange:this.handleChange(\"selectedPin\")})),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.a,{variant:\"raised\",type:\"submit\"},a(\"buttons\").enterPin)))))),this.state.auth?r.a.createElement(r.a.Fragment,null,\"start\"===this.state.currentScreen?r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},this.state.screen)):null,\"balance\"===this.state.currentScreen?r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},this.state.screen)):null,\"withdraw\"===this.state.currentScreen?r.a.createElement(\"form\",{name:\"selectedWithdraw\",onSubmit:this.onSubmit},r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.b,{item:!0,xs:12},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},\"\".concat(a(\"screens\").currentBalance,\" \").concat(this.state.balance))),r.a.createElement(E.b,{item:!0,xs:12},\"\"===this.state.error?r.a.createElement(E.h,{variant:\"subheading\",align:\"center\"},this.state.message2):r.a.createElement(E.h,{variant:\"subheading\",align:\"center\",className:n.error},this.state.error)),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.g,{name:\"selectedWithdraw\",label:a(\"inputs\").enterAmount,value:this.state.selectedWithdraw,variant:\"outlined\",onChange:this.handleChange(\"selectedWithdraw\")})),r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.a,{variant:\"raised\",type:\"submit\"},a(\"buttons\").withdraw))))):null,\"changeLanguage\"===this.state.currentScreen?r.a.createElement(\"form\",{name:\"selectedWithdraw\",onSubmit:this.onSubmit},r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.b,{item:!0,xs:6},r.a.createElement(E.h,{variant:\"title\",align:\"center\"},this.state.message2),r.a.createElement(E.c,{component:\"nav\"},r.a.createElement(E.d,{button:!0,selected:\"en\"===i,onClick:function(){e.actions.language.changeLanguage(\"en\")}},r.a.createElement(E.e,{primary:\"English\"})),r.a.createElement(E.d,{button:!0,selected:\"es\"===i,onClick:function(){e.actions.language.changeLanguage(\"es\")}},r.a.createElement(E.e,{primary:\"Espa\\xf1ol\"})),r.a.createElement(E.d,{button:!0,selected:\"jp\"===i,onClick:function(){e.actions.language.changeLanguage(\"jp\")}},r.a.createElement(E.e,{primary:\"\\u65e5\\u672c\\u8a9e\"})))))):null,\"changePin\"===this.state.currentScreen?r.a.createElement(\"form\",{name:\"changePin\",onSubmit:this.onSubmit},r.a.createElement(E.b,{container:!0,alignItems:\"center\",justify:\"center\",className:n.screen},r.a.createElement(E.b,{item:!0,xs:12},\"\"===this.state.error?r.a.createElement(E.h,{variant:\"subheading\",align:\"center\"},this.state.message2):r.a.createElement(E.h,{variant:\"subheading\",align:\"center\",className:n.error},this.state.error)),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.g,{name:\"selectedCurrentPin\",label:a(\"inputs\").selectedCurrentPin,value:this.state.selectedCurrentPin,variant:\"outlined\",onChange:this.handleChange(\"selectedCurrentPin\")})),r.a.createElement(E.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(E.g,{name:\"selectedNewPin\",label:a(\"inputs\").selectedNewPin,value:this.state.selectedNewPin,variant:\"outlined\",onChange:this.handleChange(\"selectedNewPin\")})),r.a.createElement(E.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(E.a,{variant:\"raised\",type:\"submit\"},a(\"buttons\").changePin))))):null):null),this.state.auth?r.a.createElement(r.a.Fragment,null,r.a.createElement(E.b,{container:!0,item:!0,xs:2,direction:\"column\",justify:\"flex-start\"},r.a.createElement(E.b,null,r.a.createElement(E.a,{variant:\"raised\",onClick:function(){return e.actions.withdraw.showWithdraw()}},a(\"buttons\").withdrawCash)),r.a.createElement(E.b,null,r.a.createElement(E.a,{variant:\"raised\",onClick:function(){return e.actions.pin.showChangePin()}},a(\"buttons\").changePin)),r.a.createElement(E.b,null,r.a.createElement(E.a,{variant:\"raised\",onClick:function(){return e.actions.logout()}},a(\"buttons\").logout)))):null)))}}]),t}(a.Component),C=Object(w.withStyles)(function(e){return{root:{},paper:{width:\"500px\",height:\"500px\",backgroundColor:\"lightblue\"},screen:{width:\"500px\",height:\"500px\"},error:{color:\"red\"}}})(f),v=n(51);c.a.use(u.a).use(l.a).init({resources:{en:{translations:v.en},es:{translations:v.es},jp:{translations:v.jp}},fallbackLng:\"en\",debug:!0,returnObjects:!0,ns:[\"translations\"],defaultNS:\"translations\",keySeparator:!1,interpolation:{escapeValue:!1,formatSeparator:\",\"},react:{wait:!0}});var y=Object(l.b)()(C);s.a.render(r.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},51:function(e){e.exports={en:{inputs:{selectPin:\"Enter Pin\",selectedCurrentPin:\"Enter Current Pin\",selectedNewPin:\"Enter New Pin\",enterAmount:\"Enter Amount\",loginNoCard:\"Input First Name\"},buttons:{checkBalance:\"Check Balance\",withdrawCash:\"Withdraw Cash\",changePin:\"Change Pin\",enterPin:\"Enter Pin\",changeLanguage:\"Change Language\",logout:\"Logout\",withdraw:\"Withdraw\",loginNoCard:\"Login\"},screens:{checkBalance:\"Your Balance is: \",pleaseInputPin:\"Please input your Pin\",atm:\"Automatic Teller Machine\",welcome:\"Welcome to Alistair Bank\",currentBalance:\"Current Balance: \\xa3\"},message2:{debited:\"Amount Debited: \",chooseLanguage:\"Choose your language\"},errors:{invalidWithdraw:\"Not enough Money!\",emptyPin:\"Pins can't be empty\",matchPin:\"Current Pin does not match\",samePin:\"New Pin can't be same as old Pin\",blockedInput:\"Blocked input, please login without card using your first name\"}},es:{inputs:{selectPin:\"Ingrese su Pin\",selectedCurrentPin:\"Ingrese Pin Actual\",selectedNewPin:\"Ingrese Nuevo Pin\",enterAmount:\"Ingrese Monto\",loginNoCard:\"Ingrese Primer Nombre\"},buttons:{checkBalance:\"Chequiar Balance\",withdrawCash:\"Retirar Dinero\",changePin:\"Cambiar Pin\",enterPin:\"Ingresar Pin\",changeLanguage:\"Cambiar Lenguaje\",logout:\"Salir Sesi\\xf3n\",withdraw:\"Retirar\",loginNoCard:\"Iniciar Sesi\\xf3n\"},screens:{checkBalance:\"Su Balance es: \",pleaseInputPin:\"Porfavor ingrese su Pin\",atm:\"Cajero Autom\\xe1tico\",welcome:\"Bienvenido al Banco Alistair\",currentBalance:\"Balance Actual: \\xa3\"},message2:{debited:\"Monto Retirado: \",chooseLanguage:\"Seleccione su lenguaje\"},errors:{invalidWithdraw:\"No tiene suficiente dinero!\",emptyPin:\"Pins no pueden estar vacios\",matchPin:\"Pins no son iguales\",samePin:\"El pin nuevo no puede ser el mismo que el anterior\",blockedInput:\"Ingreso Bloqueado, por favor ingrese sin su tarjeta utilizando su primer nombre.\"}},jp:{inputs:{selectPin:\"\\u30d4\\u30f3\\u306b\\u5165\\u308b\",selectedCurrentPin:\"\\u73fe\\u5728\\u306e\\u30d4\\u30f3\\u3092\\u5165\\u529b\",selectedNewPin:\"\\u65b0\\u3057\\u3044\\u30d4\\u30f3\\u3092\\u5165\\u529b\",enterAmount:\"\\u91d1\\u984d\\u3092\\u5165\\u529b\",loginNoCard:\"\\u5165\\u529b\\u540d\"},buttons:{checkBalance:\"\\u6b8b\\u9ad8\\u7167\\u5408\",withdrawCash:\"\\u30ad\\u30e3\\u30c3\\u30b7\\u30e5\\u3092\\u64a4\\u56de\\u3059\\u308b\",changePin:\"\\u30d4\\u30f3\\u306e\\u5909\\u66f4\",enterPin:\"\\u30d4\\u30f3\\u306b\\u5165\\u308b\",changeLanguage:\"\\u8a00\\u8a9e\\u306e\\u5909\\u66f4\",logout:\"\\u30ed\\u30b0\\u30a2\\u30a6\\u30c8\",withdraw:\"\\u64a4\\u9000\",loginNoCard:\"\\u30ed\\u30b0\\u30a4\\u30f3\"},screen:{checkBalance:\"\\u3042\\u306a\\u305f\\u306e\\u6b8b\\u9ad8\\u306f:\",pleaseInputPin:\"\\u30d4\\u30f3\\u3092\\u5165\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\",atm:\"\\u81ea\\u52d5\\u91d1\\u92ad\\u7cbe\\u7b97\\u6a5f\",welcome:\"\\u300cAlistair Bank\\u3078\\u3088\\u3046\\u3053\\u305d\\u300d\",currentBalance:\"\\u73fe\\u5728\\u306e\\u6b8b\\u9ad8:\\xa3\"},message2:{debited:\"\\u300c\\u501f\\u308a\\u305f\\u91d1\\u984d: \\u300d\",chooseLanguage:\"\\u3042\\u306a\\u305f\\u306e\\u8a00\\u8a9e\\u3092\\u9078\\u629e\\u3059\\u308b\"},errors:{invalidWithdraw:\"\\u304a\\u91d1\\u304c\\u8db3\\u308a\\u307e\\u305b\\u3093\\uff01\",emptyPin:\"\\u30d4\\u30f3\\u306f\\u7a7a\\u3067\\u306f\\u3042\\u308a\\u307e\\u305b\\u3093\",matchPin:\"\\u73fe\\u5728\\u306e\\u30d4\\u30f3\\u304c\\u4e00\\u81f4\\u3057\\u307e\\u305b\\u3093\",samePin:\"\\u65b0\\u3057\\u3044\\u30d4\\u30f3\\u306f\\u53e4\\u3044\\u30d4\\u30f3\\u3068\\u540c\\u3058\\u3067\\u306f\\u3042\\u308a\\u307e\\u305b\\u3093\",blockedInput:\"\\u30d6\\u30ed\\u30c3\\u30af\\u3055\\u308c\\u305f\\u5165\\u529b,\\u3042\\u306a\\u305f\\u306e\\u540d\\u5b57\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u30ab\\u30fc\\u30c9\\u306a\\u3057\\u3067\\u30ed\\u30b0\\u30a4\\u30f3\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\"}}}}},[[205,2,1]]]);","extractedComments":[]}