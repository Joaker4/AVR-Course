{"map":"{\"version\":3,\"sources\":[\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/App.jsx\",\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/serviceWorker.js\",\"/Users/fsociety/Desktop/meteorprojects/PCSD/atm/src/index.js\"],\"names\":[\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"name\",\"event\",\"console\",\"log\",\"target\",\"value\",\"setState\",\"defineProperty\",\"onSubmit\",\"ev\",\"preventDefault\",\"state\",\"selectedWithdraw\",\"balance\",\"prevState\",\"objectSpread\",\"message2\",\"concat\",\"actions\",\"pin\",\"setPin\",\"oldPin\",\"newPin\",\"error\",\"checkPin\",\"auth\",\"checkBalance\",\"currentScreen\",\"screen\",\"withdraw\",\"showWithdraw\",\"withdrawAmount\",\"amount\",\"pinTries\",\"selectedBalance\",\"_this2\",\"classes\",\"react_default\",\"a\",\"createElement\",\"index_es\",\"container\",\"item\",\"xs\",\"justify\",\"alignItems\",\"variant\",\"align\",\"onClick\",\"className\",\"paper\",\"label\",\"onChange\",\"type\",\"Component\",\"withStyles\",\"theme\",\"root\",\"width\",\"height\",\"backgroundColor\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n\\nimport { Grid, Typography, withStyles, Paper, Button, TextField } from '@material-ui/core'\\n\\n// import Screen from './Screen.jsx';\\n\\n\\nconst styles = theme => ({\\n    root: {\\n\\n    },\\n    paper: {\\n        width: '500px',\\n        height: '500px',\\n        backgroundColor: 'lightblue'\\n    },\\n    screen: {\\n        width: '500px',\\n        height: '500px'\\n    }\\n})\\n\\nclass App extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            balance: 1000,\\n            pin: '1234',\\n            auth: false,\\n            pinTries: 0,\\n            currentScreen: 'start',\\n            screen: 'Welcome to Alistair Bank',\\n            selectedBalance: 0,\\n            selectedWithdraw: 0,\\n            error: ''\\n        }\\n    }\\n\\n    componentDidUpdate() {\\n        console.log(this.state)\\n    }\\n\\n    handleChange = name => event => {\\n        console.log(name, event.target.value)\\n        this.setState(({\\n            [name]: event.target.value,\\n        }));\\n    };\\n\\n    onSubmit = ev => {\\n        ev.preventDefault()\\n        const name = ev.target.name\\n        // console.log(this.state[name])\\n        // name === 'selectedWithdraw' && \\n        if (this.state.selectedWithdraw <= this.state.balance) {\\n            this.setState(prevState => ({ ...prevState, balance: prevState.balance - this.state[name], message2: `Amount Debited: ${this.state[name]}` }))\\n        } else {\\n            this.setState(prevState => ({ ...prevState, message2: `Not enough money!` }))\\n        }\\n    }\\n\\n    actions = {\\n        pin: {\\n            setPin: (oldPin, newPin) => {\\n                oldPin === this.state.pin ? (newPin !== this.state.pin ? (this.setState({ pin: newPin })) : this.setState({ error: \\\"Pin can't be the same as before.\\\" })) : this.setState({ error: 'Pins do not match.' })\\n            },\\n            checkPin: (pin) => {\\n                pin === this.state.pin ? this.setState({ auth: true }) : this.setState({ error: 'Wrong Pin.' })\\n            }\\n        },\\n        checkBalance: () => {\\n            this.setState({ currentScreen: 'balance', screen: `Your balance is: US$ ${this.state.balance}` })\\n        },\\n        withdraw: {\\n            showWithdraw: () => {\\n                this.setState({ currentScreen: 'withdraw', screen: `Current Balance: US$ ${this.state.balance}` })\\n            },\\n            withdrawAmount: (amount) => {\\n                amount <= this.state.balance ? this.setState(prevState => ({ ...prevState, balance: prevState.balance - amount })) : this.setState({ error: 'Invalid Amount to Withdraw' })\\n            }\\n        }\\n    }\\n\\n    render() {\\n        const { classes } = this.props;\\n        return (\\n            <Grid container item xs={12} justify='center' alignItems='center' >\\n                <Grid item xs={12}>\\n                    <Typography variant='title' align='center'>\\n                        Automatic Teller Machine\\n                    </Typography>\\n                </Grid>\\n                <Grid container item xs={10} justify='center'>\\n                    <Grid container item xs justify='center' alignItems='center'>\\n                        <Grid>\\n                            <Button variant='raised' onClick={() => this.actions.checkBalance()}>\\n                                Check Balance\\n                            </Button>\\n                        </Grid>\\n                        <Paper className={classes.paper}>\\n                            {this.state.currentScreen === 'start' ?\\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                    <Typography variant='title' align='center'>\\n                                        {this.state.screen}\\n                                    </Typography>\\n                                </Grid> : null}\\n                            {this.state.currentScreen === 'balance' ?\\n                                <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                    <Typography variant='title' align='center'>\\n                                        {this.state.screen}\\n                                    </Typography>\\n                                </Grid> : null}\\n                            {this.state.currentScreen === 'withdraw' ?\\n                                <form name={'selectedWithdraw'} onSubmit={this.onSubmit} >\\n                                    <Grid container alignItems='center' justify='center' className={classes.screen}>\\n                                        <Grid item xs={12}>\\n                                            <Typography variant='title' align='center'>\\n                                                {`Current Balance: US$ ${this.state.balance}`}\\n                                            </Typography>\\n                                        </Grid>\\n                                        <Grid item xs={12}>\\n\\n                                            <Typography variant='subheading' align='center'>\\n                                                {this.state.message2}\\n                                            </Typography>\\n                                        </Grid>\\n\\n                                        <Grid container item xs={12} justify='center'>\\n                                            <Grid container item xs={6} justify='center'>\\n                                                <TextField name='selectedWithdraw' label='Enter Amount' value={this.state.selectedWithdraw} variant='outlined' onChange={this.handleChange('selectedWithdraw')} />\\n                                            </Grid>\\n                                            <Grid container item xs={6} justify='center'>\\n                                                <Button variant='raised' type='submit'\\n                                                // onClick={() => this.actions.withdraw.withdrawAmount(this.state.selectedWithdraw)}\\n                                                >\\n                                                    Withdraw\\n                                            </Button>\\n                                            </Grid>\\n                                        </Grid>\\n                                    </Grid>\\n                                </form>\\n                                : null}\\n                        </Paper>\\n                        <Grid>\\n                            <Button variant='raised' onClick={() => this.actions.withdraw.showWithdraw()}>\\n                                Withdraw\\n                            </Button>\\n                        </Grid>\\n                    </Grid>\\n                </Grid>\\n            </Grid >\\n        )\\n    }\\n}\\n\\nexport default withStyles(styles)(App);\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App.jsx';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{187:function(e,t,a){e.exports=a(309)},192:function(e,t,a){},309:function(e,t,a){\"use strict\";a.r(t);var n=a(1),r=a.n(n),c=a(17),i=a.n(c),s=(a(192),a(37)),l=a(36),o=a(101),u=a(102),m=a(105),h=a(103),b=a(106),d=a(6),w=a(5),f=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(m.a)(this,Object(h.a)(t).call(this,e))).handleChange=function(e){return function(t){console.log(e,t.target.value),a.setState(Object(l.a)({},e,t.target.value))}},a.onSubmit=function(e){e.preventDefault();var t=e.target.name;a.state.selectedWithdraw<=a.state.balance?a.setState(function(e){return Object(s.a)({},e,{balance:e.balance-a.state[t],message2:\"Amount Debited: \".concat(a.state[t])})}):a.setState(function(e){return Object(s.a)({},e,{message2:\"Not enough money!\"})})},a.actions={pin:{setPin:function(e,t){e===a.state.pin?t!==a.state.pin?a.setState({pin:t}):a.setState({error:\"Pin can't be the same as before.\"}):a.setState({error:\"Pins do not match.\"})},checkPin:function(e){e===a.state.pin?a.setState({auth:!0}):a.setState({error:\"Wrong Pin.\"})}},checkBalance:function(){a.setState({currentScreen:\"balance\",screen:\"Your balance is: US$ \".concat(a.state.balance)})},withdraw:{showWithdraw:function(){a.setState({currentScreen:\"withdraw\",screen:\"Current Balance: US$ \".concat(a.state.balance)})},withdrawAmount:function(e){e<=a.state.balance?a.setState(function(t){return Object(s.a)({},t,{balance:t.balance-e})}):a.setState({error:\"Invalid Amount to Withdraw\"})}}},a.state={balance:1e3,pin:\"1234\",auth:!1,pinTries:0,currentScreen:\"start\",screen:\"Welcome to Alistair Bank\",selectedBalance:0,selectedWithdraw:0,error:\"\"},a}return Object(b.a)(t,e),Object(u.a)(t,[{key:\"componentDidUpdate\",value:function(){console.log(this.state)}},{key:\"render\",value:function(){var e=this,t=this.props.classes;return r.a.createElement(d.b,{container:!0,item:!0,xs:12,justify:\"center\",alignItems:\"center\"},r.a.createElement(d.b,{item:!0,xs:12},r.a.createElement(d.e,{variant:\"title\",align:\"center\"},\"Automatic Teller Machine\")),r.a.createElement(d.b,{container:!0,item:!0,xs:10,justify:\"center\"},r.a.createElement(d.b,{container:!0,item:!0,xs:!0,justify:\"center\",alignItems:\"center\"},r.a.createElement(d.b,null,r.a.createElement(d.a,{variant:\"raised\",onClick:function(){return e.actions.checkBalance()}},\"Check Balance\")),r.a.createElement(d.c,{className:t.paper},\"start\"===this.state.currentScreen?r.a.createElement(d.b,{container:!0,alignItems:\"center\",justify:\"center\",className:t.screen},r.a.createElement(d.e,{variant:\"title\",align:\"center\"},this.state.screen)):null,\"balance\"===this.state.currentScreen?r.a.createElement(d.b,{container:!0,alignItems:\"center\",justify:\"center\",className:t.screen},r.a.createElement(d.e,{variant:\"title\",align:\"center\"},this.state.screen)):null,\"withdraw\"===this.state.currentScreen?r.a.createElement(\"form\",{name:\"selectedWithdraw\",onSubmit:this.onSubmit},r.a.createElement(d.b,{container:!0,alignItems:\"center\",justify:\"center\",className:t.screen},r.a.createElement(d.b,{item:!0,xs:12},r.a.createElement(d.e,{variant:\"title\",align:\"center\"},\"Current Balance: US$ \".concat(this.state.balance))),r.a.createElement(d.b,{item:!0,xs:12},r.a.createElement(d.e,{variant:\"subheading\",align:\"center\"},this.state.message2)),r.a.createElement(d.b,{container:!0,item:!0,xs:12,justify:\"center\"},r.a.createElement(d.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(d.d,{name:\"selectedWithdraw\",label:\"Enter Amount\",value:this.state.selectedWithdraw,variant:\"outlined\",onChange:this.handleChange(\"selectedWithdraw\")})),r.a.createElement(d.b,{container:!0,item:!0,xs:6,justify:\"center\"},r.a.createElement(d.a,{variant:\"raised\",type:\"submit\"},\"Withdraw\"))))):null),r.a.createElement(d.b,null,r.a.createElement(d.a,{variant:\"raised\",onClick:function(){return e.actions.withdraw.showWithdraw()}},\"Withdraw\")))))}}]),t}(n.Component),g=Object(w.withStyles)(function(e){return{root:{},paper:{width:\"500px\",height:\"500px\",backgroundColor:\"lightblue\"},screen:{width:\"500px\",height:\"500px\"}}})(f);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[187,2,1]]]);","extractedComments":[]}